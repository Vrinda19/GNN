
WANB Project name playful-night-1
Saving logs and tensorboard logs to logs\playful-night-1
tfb train path logs\playful-night-1/train
tfb_valid path logs\playful-night-1/valid
Using device cuda
Model GNN(
  (embed): Sequential(
    (0): Linear(in_features=5, out_features=64, bias=True)
  )
  (gnn_layers): ModuleList(
    (0): ReLU(inplace=True)
    (1): RGCNConv(64, 64, num_relations=4)
    (2): ReLU(inplace=True)
    (3): MFConv(64, 64)
    (4): ReLU(inplace=True)
    (5): RGCNConv(64, 64, num_relations=4)
    (6): ReLU(inplace=True)
    (7): MFConv(64, 64)
  )
  (head): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU(inplace=True)
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)
Epochs:   0%|                                                                                                                                                               | 0/10 [00:00<?, ?it/s]


































Iterations: 760it [01:16, 10.98it/s]
Epoch 1

	Validation loss 0.36
Validation Loss Decreased(inf--->0.360000) 	 Saving and Copying model
Epochs:  10%|███████████████                                                                                                                                        | 1/10 [01:23<12:28, 83.13s/it]



















Iterations: 762it [00:38, 18.76it/s]
Epoch 2

Epochs:  20%|██████████████████████████████▏                                                                                                                        | 2/10 [02:05<07:54, 59.25s/it]
Iterations: 2it [00:00, 12.36it/s]
	Validation loss 0.27
Validation Loss Decreased(0.360000--->0.270000) 	 Saving and Copying model




















Iterations: 771it [00:40, 21.11it/s]
Epoch 3

Epochs:  30%|█████████████████████████████████████████████▎                                                                                                         | 3/10 [02:48<06:03, 51.93s/it]
Iterations: 30it [00:01, 19.62it/s]
	Validation loss 0.23
Validation Loss Decreased(0.270000--->0.230000) 	 Saving and Copying model

















Iterations: 768it [00:35, 20.50it/s]
Epoch 4

Epochs:  40%|████████████████████████████████████████████████████████████▍                                                                                          | 4/10 [03:27<04:39, 46.62s/it]
Iterations: 14it [00:00, 19.79it/s]
	Validation loss 0.18
Validation Loss Decreased(0.230000--->0.180000) 	 Saving and Copying model


















Epoch 5
Epochs:  50%|███████████████████████████████████████████████████████████████████████████▌                                                                           | 5/10 [04:06<03:40, 44.02s/it]
Iterations: 35it [00:01, 15.69it/s]
	Validation loss 0.1
Validation Loss Decreased(0.180000--->0.100000) 	 Saving and Copying model























Iterations: 757it [00:47, 19.19it/s]
Epoch 6

	Validation loss 0.05
Validation Loss Decreased(0.100000--->0.050000) 	 Saving and Copying model
Epochs:  60%|██████████████████████████████████████████████████████████████████████████████████████████▌                                                            | 6/10 [04:58<03:06, 46.55s/it]





















Epoch 7
		Training data loss 0.036942753672513935
	Validation loss 0.02
Validation Loss Decreased(0.050000--->0.020000) 	 Saving and Copying model
Epochs:  70%|█████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                             | 7/10 [05:42<02:17, 45.90s/it]








Traceback (most recent call last):
  File "C:\Users\ambek\OneDrive - UvA\personal\vs\dl\train.py", line 370, in <module>
    main(**kwargs)
  File "C:\Users\ambek\OneDrive - UvA\personal\vs\dl\train.py", line 309, in main
    model = train(
  File "C:\Users\ambek\OneDrive - UvA\personal\vs\dl\train.py", line 187, in train
    loss = compute_loss(model, molecules, criterion)
  File "C:\Users\ambek\OneDrive - UvA\personal\vs\dl\train.py", line 77, in compute_loss
    tag_scores = model(molecules['x'], molecules['edge_index'], molecules['edge_attr'], molecules['batch'])
  File "C:\Users\ambek\anaconda3\envs\dl_gpu\lib\site-packages\torch\nn\modules\module.py", line 1120, in _call_impl
    result = forward_call(*input, **kwargs)
  File "C:\Users\ambek\OneDrive - UvA\personal\vs\dl\networks.py", line 111, in forward
    x = layer(x, edge_index)
  File "C:\Users\ambek\anaconda3\envs\dl_gpu\lib\site-packages\torch\nn\modules\module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\Users\ambek\anaconda3\envs\dl_gpu\lib\site-packages\torch_geometric\nn\conv\mf_conv.py", line 91, in forward
    idx = (deg == i).nonzero().view(-1)
KeyboardInterrupt